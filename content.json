{"pages":[{"title":"关于我","text":"95后程序员一枚 看书，编程，旅游在不同维度的时间里感受这个世界 愿你我，不负此生。","link":"/about/index.html"}],"posts":[{"title":"初来乍到","text":"一直对拥有一个属于自己的博客有执念，试过wordpress，也曾自己写过一个博客系统，但是渐渐偏离了当初拥有博客的初心，原来，自己只是想拥有一个属于自己的小地方来记录身边的点点滴滴。 今天开始会记录技术成长路上的每一步，加油，打工人！","link":"/2021/08/17/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0/"},{"title":"浅谈哈希算法","text":"一、定义哈希算法就是散列算法，本质就是将任意长度的二进制值串转义成固定长度的二进制串。 一般来说或哈希算法需要满足的特征： 哈希值不能被反推成原始数据。即单向哈希 对原始数据特别敏感，即使一个bit位的改动也会导致计算出的结果完全不同 散列冲突要尽可能小 执行效率要高，很长的文本也要要求在很短的时间内计算出来。 二、应用场景1、安全加密常见的安全加密算法： MD5（MD5 Message-Digest Algorithm，MD5 消息摘要算法 SHA（Secure Hash Algorithm，安全散列算法） MD5加密后的字符串最多能表示2^128的数据，从理论上来说是存在哈希碰撞的可能性的。 2、唯一标识举个例子，判断两张图片是否完全一致，图片的二进制码是非常长的，如果直接对图片的二进制码进行比对的话是非常耗时的，因此可以对这个二进制串进行取头部、中间、和尾部的二进制串进行哈希算法计算得出的值就是一个比较短的值，将这个作为这个图片的唯一标识。在对这个计算后的值进行判断效率就可以提高了。 进一步的提升方法，可以将这个唯一标识和对应的图片路径存储下来，根据这个映射就可以判断图片是否已经存在与图库中。 3、数据校验借助哈希算法对原始数据的敏感性可以在一些资源下载的时候判断文件是否被串改。 4、散列函数散列函数也是哈希算法的一种应用。 5、负载均衡我们可以通过哈希算法，对客户端 IP 地址或者会话 ID 计算哈希值，将取得的哈希值与服务器列表的大小进行取模运算，最终得到的值就是应该被路由到的服务器编号 6、数据分片 如何统计“搜索关键词”出现的次数？ 如何快速判断图片是否在图库中？ 7、分布式存储","link":"/2021/08/18/%E6%B5%85%E8%B0%88%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95/"},{"title":"一款all-in的音乐播放器","text":"给大家介绍一款神器音乐播放器，你想要的都有！ ​ 随着最近国内的版权越来越严格，歌单中的灰色歌曲越来越多了，网抑云渐渐的不香了，每次都需要在不同的平台才能找到自己想要的歌曲，后来转用QQ音乐，企鹅系的软件风格，你懂得~在充值不到位的情况下实在是一言难尽。 ​ 这是故事的背景，后来在某hub上看到了这款基于 Electron + Vue 开发的音乐软件。界面嘛，马马虎虎，最重要的是，歌曲太全了！！！话不多说，先上传送门：https://github.com/lyswhut/lx-music-desktop ​ 经过两天的体验下来综合来说找歌实在是太方便了，终于不用在各大app中间不挺切换了，虽然说app的操作逻辑还有待优化，但是总体来说还是很nice的。","link":"/2021/08/22/%E4%B8%80%E6%AC%BEall-in%E7%9A%84%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"}],"tags":[],"categories":[{"name":"碎言碎语","slug":"碎言碎语","link":"/categories/%E7%A2%8E%E8%A8%80%E7%A2%8E%E8%AF%AD/"},{"name":"算法","slug":"算法","link":"/categories/%E7%AE%97%E6%B3%95/"},{"name":"开源世界","slug":"开源世界","link":"/categories/%E5%BC%80%E6%BA%90%E4%B8%96%E7%95%8C/"}]}